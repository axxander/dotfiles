# Place a copy of this config to ~/.aerospace.toml
# After that, you can edit ~/.aerospace.toml to your liking

# You can use it to add commands that run after login to macOS user session.
# 'start-at-login' needs to be 'true' for 'after-login-command' to work
# Available commands: https://nikitabobko.github.io/AeroSpace/commands
after-login-command = []

# You can use it to add commands that run after AeroSpace startup.
# 'after-startup-command' is run after 'after-login-command'
# Available commands : https://nikitabobko.github.io/AeroSpace/commands
after-startup-command = []

# Start AeroSpace at login
start-at-login = true

# Normalizations. See: https://nikitabobko.github.io/AeroSpace/guide#normalization
enable-normalization-flatten-containers = true
enable-normalization-opposite-orientation-for-nested-containers = true

# See: https://nikitabobko.github.io/AeroSpace/guide#layouts
# The 'accordion-padding' specifies the size of accordion padding
# You can set 0 to disable the padding feature
accordion-padding = 150

# Possible values: tiles|accordion
default-root-container-layout = 'tiles'

# Possible values: horizontal|vertical|auto
# 'auto' means: wide monitor (anything wider than high) gets horizontal orientation,
#               tall monitor (anything higher than wide) gets vertical orientation
default-root-container-orientation = 'auto'

# Mouse follows focus when focused monitor changes
# Drop it from your config, if you don't like this behavior
# See https://nikitabobko.github.io/AeroSpace/guide#on-focus-changed-callbacks
# See https://nikitabobko.github.io/AeroSpace/commands#move-mouse
# Fallback value (if you omit the key): on-focused-monitor-changed = []
on-focused-monitor-changed = ['move-mouse monitor-lazy-center']

# You can effectively turn off macOS "Hide application" (cmd-h) feature by toggling this flag
# Useful if you don't use this macOS feature, but accidentally hit cmd-h or cmd-alt-h key
# Also see: https://nikitabobko.github.io/AeroSpace/goodies#disable-hide-app
automatically-unhide-macos-hidden-apps = false

# Possible values: (qwerty|dvorak|colemak)
# See https://nikitabobko.github.io/AeroSpace/guide#key-mapping
[key-mapping]
    preset = 'qwerty'


# Gaps between windows (inner-*) and between monitor edges (outer-*).
# Possible values:
# - Constant:     gaps.outer.top = 8
# - Per monitor:  gaps.outer.top = [{ monitor.main = 16 }, { monitor."some-pattern" = 32 }, 24]
#                 In this example, 24 is a default value when there is no match.
#                 Monitor pattern is the same as for 'workspace-to-monitor-force-assignment'.
#                 See:
#                 https://nikitabobko.github.io/AeroSpace/guide#assign-workspaces-to-monitors
[gaps]
    inner.horizontal = 10
    inner.vertical =   10
    outer.left =       10
    outer.bottom =     10
    outer.top =        10
    outer.right =      10

# 'main' binding mode declaration
# See: https://nikitabobko.github.io/AeroSpace/guide#binding-modes
# 'main' binding mode must be always presented
# Fallback value (if you omit the key): mode.main.binding = {}
[mode.main.binding]

    # All possible keys:
    # - Letters.        a, b, c, ..., z
    # - Numbers.        0, 1, 2, ..., 9
    # - Keypad numbers. keypad0, keypad1, keypad2, ..., keypad9
    # - F-keys.         f1, f2, ..., f20
    # - Special keys.   minus, equal, period, comma, slash, backslash, quote, semicolon,
    #                   backtick, leftSquareBracket, rightSquareBracket, space, enter, esc,
    #                   backspace, tab, pageUp, pageDown, home, end, forwardDelete,
    #                   sectionSign (ISO keyboards only, european keyboards only)
    # - Keypad special. keypadClear, keypadDecimalMark, keypadDivide, keypadEnter, keypadEqual,
    #                   keypadMinus, keypadMultiply, keypadPlus
    # - Arrows.         left, down, up, right

    # All possible modifiers: cmd, alt, ctrl, shift

    # All possible commands: https://nikitabobko.github.io/AeroSpace/commands

    # See: https://nikitabobko.github.io/AeroSpace/commands#exec-and-forget
    # You can uncomment the following lines to open up terminal with alt + enter shortcut
    # (like in i3)
    # alt-enter = '''exec-and-forget osascript -e '
    # tell application "Terminal"
    #     do script
    #     activate
    # end tell'
    # '''

    # See: https://nikitabobko.github.io/AeroSpace/commands#layout
    alt-slash = 'layout tiles horizontal vertical'
    alt-comma = 'layout accordion horizontal vertical'

    # See: https://nikitabobko.github.io/AeroSpace/commands#focus
    cmd-h = 'focus left'
    cmd-j = 'focus down'
    cmd-k = 'focus up'
    cmd-l = 'focus right'

    # See: https://nikitabobko.github.io/AeroSpace/commands#move
    cmd-shift-h = 'move left'
    cmd-shift-j = 'move down'
    cmd-shift-k = 'move up'
    cmd-shift-l = 'move right'

    # See: https://nikitabobko.github.io/AeroSpace/commands#resize
    cmd-shift-minus = 'resize smart -50'
    cmd-shift-equal = 'resize smart +50'

    # See: https://nikitabobko.github.io/AeroSpace/commands#workspace
    # hyperkey capslock
    alt-ctrl-cmd-1 = 'workspace 1'
    alt-ctrl-cmd-2 = 'workspace 2'
    alt-ctrl-cmd-3 = 'workspace 3'
    alt-ctrl-cmd-4 = 'workspace 4'
    alt-ctrl-cmd-5 = 'workspace 5'
    # alt-ctrl-cmd-6 = 'workspace 6'
    # alt-ctrl-cmd-7 = 'workspace 7'
    # alt-ctrl-cmd-8 = 'workspace 8'
    # alt-ctrl-cmd-9 = 'workspace 9'
    # alt-ctrl-cmd-a = 'workspace A' # In your config, you can drop workspace bindings that you don't need
    # alt-ctrl-cmd-b = 'workspace B'
    # alt-ctrl-cmd-c = 'workspace C'
    # alt-ctrl-cmd-d = 'workspace D'
    # alt-ctrl-cmd-e = 'workspace E'
    # alt-ctrl-cmd-f = 'workspace F'
    # alt-ctrl-cmd-g = 'workspace G'
    # alt-ctrl-cmd-i = 'workspace I'
    alt-ctrl-cmd-m = 'workspace M'  # music
    # alt-ctrl-cmd-n = 'workspace N'
    alt-ctrl-cmd-o = 'workspace O'  # obsidian
    # alt-ctrl-cmd-p = 'workspace P'
    # alt-ctrl-cmd-q = 'workspace Q'
    # alt-ctrl-cmd-r = 'workspace R'
    alt-ctrl-cmd-s = 'workspace S'  # slack
    alt-ctrl-cmd-t = 'workspace T'  # terminal emulator
    # alt-ctrl-cmd-u = 'workspace U'
    # alt-ctrl-cmd-v = 'workspace V'
    alt-ctrl-cmd-w = 'workspace W'  # web browser
    # alt-ctrl-cmd-x = 'workspace X'
    # alt-ctrl-cmd-y = 'workspace Y'
    # alt-ctrl-cmd-z = 'workspace Z'

    # See: https://nikitabobko.github.io/AeroSpace/commands#move-node-to-workspace
    alt-shift-1 = 'move-node-to-workspace 1'
    alt-shift-2 = 'move-node-to-workspace 2'
    alt-shift-3 = 'move-node-to-workspace 3'
    alt-shift-4 = 'move-node-to-workspace 4'
    alt-shift-5 = 'move-node-to-workspace 5'
    # alt-shift-6 = 'move-node-to-workspace 6'
    # alt-shift-7 = 'move-node-to-workspace 7'
    # alt-shift-8 = 'move-node-to-workspace 8'
    # alt-shift-9 = 'move-node-to-workspace 9'
    # alt-shift-a = 'move-node-to-workspace A'
    # alt-shift-b = 'move-node-to-workspace B'
    # alt-shift-c = 'move-node-to-workspace C'
    # alt-shift-d = 'move-node-to-workspace D'
    # alt-shift-e = 'move-node-to-workspace E'
    # alt-shift-f = 'move-node-to-workspace F'
    # alt-shift-g = 'move-node-to-workspace G'
    # alt-shift-i = 'move-node-to-workspace I'
    alt-shift-m = 'move-node-to-workspace M'
    # alt-shift-n = 'move-node-to-workspace N'
    alt-shift-o = 'move-node-to-workspace O'
    # alt-shift-p = 'move-node-to-workspace P'
    # alt-shift-q = 'move-node-to-workspace Q'
    # alt-shift-r = 'move-node-to-workspace R'
    alt-shift-s = 'move-node-to-workspace S'
    alt-shift-t = 'move-node-to-workspace T'
    # alt-shift-u = 'move-node-to-workspace U'
    # alt-shift-v = 'move-node-to-workspace V'
    alt-shift-w = 'move-node-to-workspace W'
    # alt-shift-x = 'move-node-to-workspace X'
    # alt-shift-y = 'move-node-to-workspace Y'
    # alt-shift-z = 'move-node-to-workspace Z'

    # See: https://nikitabobko.github.io/AeroSpace/commands#workspace-back-and-forth
    cmd-tab = 'workspace-back-and-forth'
    # See: https://nikitabobko.github.io/AeroSpace/commands#move-workspace-to-monitor
    cmd-shift-tab = 'move-workspace-to-monitor --wrap-around next'

    # See: https://nikitabobko.github.io/AeroSpace/commands#mode
    cmd-shift-semicolon = 'mode service'

    # Custom: cycle focus in flat layout
    cmd-o = [
        'focus right --boundaries workspace --boundaries-action wrap-around-the-workspace',
        'focus down --boundaries workspace --boundaries-action wrap-around-the-workspace'
    ]


# 'service' binding mode declaration.
# See: https://nikitabobko.github.io/AeroSpace/guide#binding-modes
[mode.service.binding]
    esc = ['reload-config', 'mode main']
    r = ['flatten-workspace-tree', 'mode main'] # reset layout
    f = ['layout floating tiling', 'mode main'] # Toggle between floating and tiling layout
    backspace = ['close-all-windows-but-current', 'mode main']

    # sticky is not yet supported https://github.com/nikitabobko/AeroSpace/issues/2
    #s = ['layout sticky tiling', 'mode main']

    # removed shift as we are in service mode
    cmd-h = ['join-with left', 'mode main']
    cmd-j = ['join-with down', 'mode main']
    cmd-k = ['join-with up', 'mode main']
    cmd-l = ['join-with right', 'mode main']

    down = 'volume down'
    up = 'volume up'
    shift-down = ['volume set 0', 'mode main']

# custom callbacks
# See: https://nikitabobko.github.io/AeroSpace/guide#callbacks
[[on-window-detected]]
    if.app-id = 'com.google.Chrome'
    run = 'move-node-to-workspace W'

[[on-window-detected]]
    if.app-id = 'com.apple.Music'
    run = 'move-node-to-workspace M'

[[on-window-detected]]
    if.app-id = 'md.obsidian'
    run = 'move-node-to-workspace O'

[[on-window-detected]]
    if.app-id = 'com.tinyspeck.slackmacgap'
    run = 'move-node-to-workspace S'
